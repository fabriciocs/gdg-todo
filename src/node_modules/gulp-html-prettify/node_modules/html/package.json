{
  "name": "html",
  "version": "0.0.7",
  "engines": [
    "node >=0.4.0"
  ],
  "description": "HTML pretty printer.",
  "author": {
    "name": "Max Ogden",
    "email": "max@maxogden.com",
    "url": "http://maxogden.com"
  },
  "contributors": [
    {
      "name": "Nochum Sossonko",
      "email": "nsossonko@hotmail.com"
    },
    {
      "name": "Einar Lielmanis",
      "email": "elfz@laacz.lv"
    }
  ],
  "keywords": [
    "html",
    "tabifier",
    "beautifier",
    "prettyprinter",
    "prettifier",
    "pretty",
    "command",
    "shell"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/maxogden/commonjs-html-prettyprinter.git"
  },
  "bin": {
    "html": "./bin/html.js"
  },
  "main": "lib/html.js",
  "gitHead": "6c0a0fd91e44070ff528dd003b9a81d34a3d547d",
  "readme": "# html prettyprinter\r\n\r\nA node port of beautify-html.js by Nochum Sossonko which is based on jsbeautifier by Einar Lielmanis\r\n\r\n## Installation\r\n\r\n### from npm (node package manager)\r\n``` bash\r\n  npm install html\r\n```\r\n\r\n## Usage (command line)\r\n\r\n```\r\n  echo \"<h2><strong><a href=\"http://awesome.com\">AwesomeCom</a></strong><span>is awesome</span></h2>\" | html\r\n```\r\n\r\nreturns:\r\n  \r\n``` html  \r\n  <h2>\r\n      <strong>\r\n          <a href=http://awesome.com>AwesomeCom</a>\r\n      </strong>\r\n      <span>\r\n          is awesome\r\n      </span>\r\n  </h2>\r\n````\r\n\r\n`html foo.html` will write the prettified version to `stdout`.\r\n\r\n`html *.html` will *update in place* all matching html files with their prettified versions.\r\n\r\n## Advanced usage\r\n\r\nI find myself constantly using the 'Copy as HTML' feature of the Chrome Inspector:\r\n\r\n![Copy as HTML](https://github.com/maxogden/commonjs-html-prettyprinter/raw/master/img/copyashtml.png)\r\n\r\nThe downside is that that usually the HTML that gets copied is pretty ugly:\r\n\r\n![Before pretty printing](https://github.com/maxogden/commonjs-html-prettyprinter/raw/master/img/before.png)\r\n\r\nOn OS X you can use `pbpaste` and `pbcopy` to stream your clipboard in and out of unix pipes. With the ugly HTML still in your clipboard run this command:\r\n\r\n`pbpaste | html | pbcopy`\r\n\r\nNow when you paste your clipboard into an editor you will get nice, pretty printed HTML:\r\n\r\n![After pretty printing](https://github.com/maxogden/commonjs-html-prettyprinter/raw/master/img/after.png)\r\n\r\n## Upgrading\r\n\r\ngrab the newest `beautify-html.js` from [js-beautifier](https://github.com/einars/js-beautify) and drop it into `lib/` as `html.js`. then add the following code to the bottom of `html.js`:\r\n\r\n```javascript\r\n  module.exports = { prettyPrint: style_html }\r\n```\r\n\r\nBSD LICENSE",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/maxogden/commonjs-html-prettyprinter/issues"
  },
  "homepage": "https://github.com/maxogden/commonjs-html-prettyprinter#readme",
  "_id": "html@0.0.7",
  "_shasum": "5f012945e113cd97bfed1d888d49d936b86d13f3",
  "_from": "git://github.com/colynb/commonjs-html-prettyprinter.git",
  "_resolved": "git://github.com/colynb/commonjs-html-prettyprinter.git#6c0a0fd91e44070ff528dd003b9a81d34a3d547d"
}
